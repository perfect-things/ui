input,
select,
textarea,
label {
	touch-action: manipulation;
}

.theme-dark input { color-scheme: dark; }
.theme-light input { color-scheme: light; }


textarea::placeholder,
input::placeholder { color: var(--ui-color-text-1); font-style: italic; }


:where(input:not([type=radio], [type=checkbox])) {
	font: inherit;
	height: calc(var(--ui-button-height) - 2px);
	border: 1px solid transparent;
	line-height: 1;
	color: var(--ui-color-text);
	background-color: var(--ui-color-background-input);
	border-radius: var(--ui-border-radius);
	padding: 0 var(--ui-margin-m);
	width: 25ch;
}

:where(input:focus) { outline: 0; }

:where(input:invalid) {
	border-color: var(--ui-color-danger);
	box-shadow: var(--ui-shadow-danger);
}


input[type=color] {
	appearance: none;
	background: none;
	border: none;
	padding: 0;
	cursor: pointer;
}

:where(input:disabled) { opacity: 0.75; cursor: default; }




.check-and-radio input {
	appearance: none;
	width: 1.375rem;
	height: 1.375rem;
	display: inline-flex;
	align-items: center;
	justify-content: center;
	border-radius: 0.375em;
	background: var(--ui-color-background-input);
	border: 1px solid var(--ui-color-text-2);
	color: var(--ui-color-text-1);
	font: inherit;
	/* required for proper sizing */
	flex-shrink: 0;
	touch-action: manipulation;
}

.check-and-radio input::after {
	content: " ";
	opacity: 0;
	font-size: var(--ui-font-l);
	line-height: 1;
	text-box: trim-both cap alphabetic;
	color: inherit;
	transition: opacity calc(var(--ui-animation-speed) / 2) ease-out;
}

.check-and-radio input:checked::after { opacity: 1; }

.input { width: 25ch; vertical-align: middle; }

.input .input-inner {
	display: flex;
	flex-flow: column;
	align-items: stretch;
	justify-content: stretch;
	border-radius: var(--ui-border-radius);
	background: var(--ui-color-background-input);
	border: 1px solid var(--ui-color-border);
}


/* label on the left */
.radio.label-on-the-left,
.button-toggle.input.label-on-the-left,
.textarea.label-on-the-left,
.toggle.label-on-the-left,
.range.label-on-the-left,
.input.label-on-the-left {
	display: inline-flex;
	flex-flow: row;
	align-items: center;
	width: 100%;
	gap: 1rem;
}

.label-on-the-left .range-inner,
.label-on-the-left .input-inner { flex: 1; }


.input-inner:focus-within,
.input-inner:active:not(:disabled, .disabled) {
	border-color: var(--ui-color-accent);
	box-shadow: var(--ui-shadow-focus);
}



.input,
.textarea textarea:disabled,
.range input:disabled,
.input select:disabled,
.input input:disabled { opacity: 1; color: var(--ui-color-text); }

.input .input-inner:has(input:disabled),
.range .range-inner:has(:disabled),
.textarea .textarea-inner:has(:disabled) { opacity: 0.7; }

.input input:not([type=radio]) { width: 100%; border: none; }

.input input:not([type=radio]):focus,
.input input:not([type=radio]):invalid { box-shadow: none; border: none; }




.input-row {
	width: 100%;
	display: flex;
	flex-flow: row;
	align-items: center;
	justify-content: space-between;
	position: relative;
	border-radius: inherit;
}

.input-row>.button,
.input-row>.icon { position: absolute; height: 100%; z-index: 1; }

.input-row>.button { color: var(--ui-color-text-1); right: 6px; }

.input-row>.icon {
	color: var(--ui-color-text-2);
	left: 0.3rem;
	width: 1.5rem;
	pointer-events: none;
}
